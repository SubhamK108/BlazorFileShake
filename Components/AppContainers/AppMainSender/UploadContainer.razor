<div class="@((!IsLoading && !IsError) ? "" : "hidden") h-full w-full p-5 max-sm:p-4">
    <div class="h-full w-full rounded-3xl border-4 border-dashed border-[#074DA6] flex items-center justify-center text-center bg-transparent hover:bg-blue-300 dark:hover:bg-blue-950 relative shadow-inner">
        <div class="flex flex-col justify-center items-center text-center">
            <i class="text-[13rem] max-2xl:text-[11.5rem] max-sm:text-[8rem] mb-8 max-sm:mb-6 drop-shadow-xl dark:drop-shadow-2xl fa-solid fa-file-arrow-up"></i>
            <div class="text-[1.5rem] max-sm:text-[1.1rem]">
                <p>Drag & Drop</p>
                <p>OR</p>
                <p>Click To Upload</p>
                <p class="text-[1.3rem] max-sm:text-[1rem]">(Upto 1GB & 100 Files)</p>
            </div>
        </div>
        <InputFile 
            class="absolute w-full h-full opacity-0 cursor-pointer" 
            title="" 
            multiple="@true"
            OnChange="@UploadFiles">
        </InputFile>
    </div>
</div>
@if (!IsLoading && IsError)
{
    <ErrorContainer 
        ErrorText="@ErrorText" 
        ErrorAction="@TryAgainIfFailed" 
        ErrorButtonText="Upload Again" 
    />
}
@if (IsLoading)
{
    <div class="h-full w-full flex justify-center items-center">
        <Spinner />
    </div>
}

@code {
    [Parameter] public Action UpdateAppMainState { get; init; } = () => { };
    private long MaxSizeAllowed { get; } = 1024 * 1024 * 1024;
    private int MaxFilesAllowed { get; } = 100;
    private bool IsLoading { get; set; } = false;
    private bool IsError { get; set; } = false;
    private string ErrorText { get; set; } = "";

    private async Task UploadFiles(InputFileChangeEventArgs files)
    {
        if (files.FileCount == 0)
        {
            return;
        }
        IsLoading = true;
        await Task.Delay(700);

        if (files.FileCount > MaxFilesAllowed)
        {
            ErrorText = "You can only upload 100 files at max!";
            IsError = true;
            IsLoading = false;
            return;
        }
        long totalSize = 0;
        foreach (IBrowserFile file in files.GetMultipleFiles(MaxFilesAllowed))
        {
            totalSize += file.Size;
            if (totalSize > MaxSizeAllowed)
            {
                ErrorText = "You can only upload a total of 1GB of files at max!";
                IsError = true;
                IsLoading = false;
                AppState.UploadedFiles.Clear();
                return;
            }
            byte[] fileBuffer = new byte[file.Size];
            await file.OpenReadStream(MaxSizeAllowed).ReadAsync(fileBuffer);
            AppState.UploadedFiles.Add(new()
            {
                FileBytes = fileBuffer,
                FileName = file.Name,
                FileSize = Utils.FormatBytes(file.Size),
                FileExtension = file.Name[(file.Name.LastIndexOf('.') + 1)..].ToUpper(),
                FileType = file.ContentType
            });
        }
        AppState.IsUploadComplete = true;
        UpdateAppMainState();
    }

    private void TryAgainIfFailed() => IsError = false;
}