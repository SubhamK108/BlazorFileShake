@inject IJSRuntime JS

<div class="h-full w-full p-5 max-sm:p-4 flex flex-col justify-center items-center gap-8 max-2xl:gap-7 max-sm:gap-2">
    <div class="h-[30%] w-full flex flex-col justify-center items-center gap-5 max-2xl:gap-4 max-sm:gap-3">
        <input
            type="text"
            readonly
            class="p-4 max-2xl:p-3 max-sm:p-2 text-[1.3rem] max-2xl:text-[1.1rem] max-sm:text-[0.95rem] bg-[#F2F3F5] dark:bg-[#181818] text-[#404756] dark:text-[#ffffffa6] border border-[#AEAEAE] rounded-full font-mono w-full text-center focus:outline-none shadow-md dark:shadow-lg tracking-wider cursor-pointer"
            value="@AppState.FinalDownloadLink"
            onclick="this.setSelectionRange(0, this.value.length);"
        />
        <div class="flex flex-row justify-center items-center gap-6 max-2xl:gap-5 max-sm:gap-4">
            <button 
                class="h-[4.7rem] w-[4.7rem] max-2xl:h-[3.8rem] max-2xl:w-[3.8rem] max-sm:h-[3rem] max-sm:w-[3rem] rounded-full shadow-md dark:shadow-lg bg-green-700 dark:bg-green-900 hover:bg-green-900 dark:hover:bg-green-950 disabled:bg-zinc-400 dark:disabled:bg-zinc-800 hover:ring hover:ring-green-500 dark:hover:ring-green-700 disabled:ring-transparent dark:disabled:ring-transparent text-gray-200 disabled:text-zinc-300 dark:disabled:text-zinc-600"
                title="@(IsCopyToClipboardDone ? "Copied link to clipboard" : "Copy link to clipboard")"
                @onclick="@CopyToClipboard"
            >
                @if (IsCopyToClipboardDone)
                {
                    <i class="max-2xl:pt-1 max-sm:pt-1 text-[2.6rem] max-2xl:text-[2.2rem] max-sm:text-[1.7rem] fa-solid fa-check"></i>
                }
                else
                {
                    <i class="max-2xl:pt-1 max-sm:pt-1 text-[2.1rem] max-2xl:text-[1.7rem] max-sm:text-[1.3rem] fa-solid fa-copy"></i>
                }
            </button>
            <button 
                class="h-[4.7rem] w-[4.7rem] max-2xl:h-[3.8rem] max-2xl:w-[3.8rem] max-sm:h-[3rem] max-sm:w-[3rem] rounded-full shadow-md dark:shadow-lg bg-green-700 dark:bg-green-900 hover:bg-green-900 dark:hover:bg-green-950 disabled:bg-zinc-400 dark:disabled:bg-zinc-800 hover:ring hover:ring-green-500 dark:hover:ring-green-700 disabled:ring-transparent dark:disabled:ring-transparent text-gray-200 disabled:text-zinc-300 dark:disabled:text-zinc-600"
                title="Share link"
                @onclick="@ActivateShareUI"
            >
                <i class="max-2xl:pt-1 max-sm:pt-1 text-[2.3rem] max-2xl:text-[1.9rem] max-sm:text-[1.5rem] fa-solid fa-share-nodes"></i>
            </button>
            <button 
                class="h-[4.7rem] w-[4.7rem] max-2xl:h-[3.8rem] max-2xl:w-[3.8rem] max-sm:h-[3rem] max-sm:w-[3rem] rounded-full shadow-md dark:shadow-lg bg-[#074DA6] dark:bg-[#05336E] hover:bg-[#05346e] dark:hover:bg-[#04234D] disabled:bg-zinc-400 dark:disabled:bg-zinc-800 hover:ring hover:ring-[#0091ff] dark:hover:ring-[#074DA6] disabled:ring-transparent dark:disabled:ring-transparent text-gray-200 disabled:text-zinc-300 dark:disabled:text-zinc-600"
                title="Start from scratch"
                @onclick="@RefreshApp"
            >
                <i class="max-2xl:pt-1 max-sm:pt-1 text-[2.3rem] max-2xl:text-[1.9rem] max-sm:text-[1.5rem] fa-solid fa-arrows-rotate"></i>
            </button>
        </div>
    </div>
    <div class="h-[60%] w-full flex flex-col justify-center items-center gap-5 max-sm:gap-4">
        <p class="text-[1.3rem] max-2xl:text-[1.1rem] max-sm:text-[0.95rem]">You can also share this QR Code:</p>
        <div class="bg-white text-[#404756] rounded-3xl p-6 max-2xl:p-5 max-sm:p-4 border border-[#AEAEAE] shadow-md dark:shadow-lg pointer-events-none">
            <img 
                src="@($"https://api.qrserver.com/v1/create-qr-code/?data={AppState.FinalDownloadLink}")"
                alt="Share QR Code"
                loading="eager"
                class="@(IsQRCodeLoaded ? "" : "hidden") h-[14rem] w-[14rem] max-2xl:h-[12rem] max-2xl:w-[12rem] max-sm:h-[9rem] max-sm:w-[9rem]"
            />
            <div class="@(IsQRCodeLoaded ? "hidden" : "") h-[14rem] w-[14rem] max-2xl:h-[12rem] max-2xl:w-[12rem] max-sm:h-[9rem] max-sm:w-[9rem] flex justify-center items-center">
                <Spinner Size="@Spinner.Sizes.LARGE" />
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Action UpdateAppMainState { get; init; } = () => { };
    private bool IsCopyToClipboardDone { get; set; } = false;
    private bool IsQRCodeLoaded { get; set; } = false;
    private Timer? _timer = null;
    private Timer? _timer2 = null;

    protected override void OnInitialized()
    {
        _timer2 = new(async _ =>
        {
            IsQRCodeLoaded = true;
            await InvokeAsync(StateHasChanged);
            _timer2!.Dispose();
        }, null, 1500, Timeout.Infinite);
    }

    private async Task CopyToClipboard()
    {
        await JS.InvokeVoidAsync("navigator.clipboard.writeText", AppState.FinalDownloadLink);
        IsCopyToClipboardDone = true;
        _timer = new(async _ =>
        {
            IsCopyToClipboardDone = false;
            await InvokeAsync(StateHasChanged);
            _timer!.Dispose();
        }, null, 2500, Timeout.Infinite);
    }

    private async Task ActivateShareUI()
    {
        await JS.InvokeVoidAsync("navigator.share", new ShareData
        {
            URL = AppState.FinalDownloadLink
        });
    }

    private void RefreshApp()
    {
        AppState.RefreshAppState();
        UpdateAppMainState();
    }
}